using Content.Client.Administration.Managers;
using Content.Shared._Umbra.Discord;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;

namespace Content.Client.Options.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class OptionsMenu : DefaultWindow
    {
        [Dependency] private readonly IClientAdminManager _adminManager = default!;
        [Dependency] private readonly IConfigurationManager _configurationManager = default!;

        public OptionsMenu()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            Tabs.SetTabTitle(0, Loc.GetString("ui-options-tab-misc"));
            Tabs.SetTabTitle(1, Loc.GetString("ui-options-tab-graphics"));
            Tabs.SetTabTitle(2, Loc.GetString("ui-options-tab-controls"));
            Tabs.SetTabTitle(3, Loc.GetString("ui-options-tab-audio"));
            Tabs.SetTabTitle(4, Loc.GetString("ui-options-tab-accessibility"));
            Tabs.SetTabTitle(5, Loc.GetString("ui-options-tab-admin"));
            Tabs.SetTabTitle(6, Loc.GetString("ui-options-tab-discord"));

            UpdateTabs();

            Tabs.OnTabChanged += TabChanged;
        }

        private void TabChanged(int tab)
        {
            if (tab == 6)
                DiscordTab.Refresh();
        }

        public void UpdateTabs()
        {
            var isAdmin = _adminManager.IsAdmin(true);
            Tabs.SetTabVisible(5, isAdmin);
            Tabs.SetTabVisible(6, _configurationManager.GetCVar(DiscordCCVars.DiscordOAuthEnabled));

            GraphicsTab.Control.ReloadValues();
            MiscTab.Control.ReloadValues();
            AccessibilityTab.Control.ReloadValues();
            AudioTab.Control.ReloadValues();
            AdminOptionsTab.Control.ReloadValues();
        }
    }
}
