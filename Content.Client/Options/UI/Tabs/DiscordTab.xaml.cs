using Content.Client._Umbra.Discord;
using Content.Shared._Umbra.Discord;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Network;

namespace Content.Client.Options.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class DiscordTab : Control
{
    [Dependency] private readonly IClientNetManager _clientNetManager = default!;
    [Dependency] private readonly ILocalizationManager _localizationManager = default!;
    [Dependency] private readonly DiscordOAuthManager _discordOAuthManager = default!;

    public DiscordTab()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    protected override void EnteredTree()
    {
        _discordOAuthManager.OnStatusReceived += ReceivedStatus;
        UnlinkButton.OnPressed += Unlink;
        LinkButton.OnPressed += Link;
        Refresh();
    }

    private void Link(BaseButton.ButtonEventArgs _)
    {
        _discordOAuthManager.Link();
    }

    private void Unlink(BaseButton.ButtonEventArgs _)
    {
        _discordOAuthManager.Unlink();
    }

    protected override void ExitedTree()
    {
        _discordOAuthManager.OnStatusReceived -= ReceivedStatus;
        UnlinkButton.OnPressed -= Unlink;
        LinkButton.OnPressed -= Link;
    }

    private void ReceivedStatus(DiscordOAuthStatusMessage message)
    {
        StatusLabel.Text = _localizationManager.GetString(message.IsLinked
            ? "ui-options-discord-link-status-linked"
            : "ui-options-discord-link-status-not-linked",
            ("user", message.Username));

        LinkButton.Visible = !message.IsLinked;
        UnlinkButton.Visible = message.IsLinked;

        Loading.Visible = false;
        ScrollContainer.Visible = true;
    }

    public void Refresh()
    {
        _clientNetManager.ClientSendMessage(new DiscordOAuthAskStatusMessage());
        Loading.Visible = true;
        ScrollContainer.Visible = false;
    }
}

